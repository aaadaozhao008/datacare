<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	
<!-- 	<import resource = "classpath*:spring-mvc.xml" /> -->
	 <!-- base-package 如果多个，用“,”分隔 -->
	 <context:component-scan base-package="com.myqq.web" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	 </context:component-scan>
	
	<!-- 使用Annotation自动注册Bean,只扫描@Controller -->
	<!-- <context:component-scan base-package="com.ecastle.datamanager" use-default-filters="false">base-package 如果多个，用“,”分隔
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan> -->
	
	<mvc:annotation-driven>
	      <!-- 解决json 中文乱码 -->
		  <mvc:message-converters  register-defaults="true">
           <bean class="org.springframework.http.converter.StringHttpMessageConverter">
               <constructor-arg value="UTF-8" />
               <property name="supportedMediaTypes">
                   <list>
                      <value>application/json;charset=UTF-8</value>
                   </list>
               </property>
           </bean>
        <!--    <bean  class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
         		 <property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
						<value>application/x-www-form-urlencoded;charset=UTF-8</value>
						<value>text/plain;charset=UTF-8</value>
						<value>text/html;charset=UTF-8</value>
					</list>
                </property>
           
           </bean> -->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
               <!--  <property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
						<value>application/x-www-form-urlencoded;charset=UTF-8</value>
						<value>text/plain;charset=UTF-8</value>
						<value>text/html;charset=UTF-8</value>
					</list>
                </property> -->
                
                <property name="fastJsonConfig">
		            <bean class="com.alibaba.fastjson.support.config.FastJsonConfig">
						<property name="serializerFeatures">
							<list>
						       <value>WriteMapNullValue</value>
		                       <value>QuoteFieldNames</value>
		                       <value>WriteDateUseDateFormat</value>
							</list>
						</property>
						<property name="dateFormat" value="yyyy-MM-dd HH:mm:ss"></property>
					</bean>
		        </property>
		    </bean> 
       </mvc:message-converters>
	</mvc:annotation-driven>
	

	
	
	
	<!-- ========================= 视图 解析器 ========================= -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 静态资源映射 -->
	<mvc:resources mapping="/static/**" location="/page/static/" cache-period="31536000"/>
	<!-- <mvc:resources mapping="/service-worker.js" location="/page/service-worker.js" cache-period="31536000"/> -->
	<mvc:default-servlet-handler />
 
   <!-- 前置通知和异常通知日志处理 -->
<!-- 	<aop:aspectj-autoproxy proxy-target-class="true">
        <aop:include name="logAspect" />
    </aop:aspectj-autoproxy>
 
    <bean id="logAspect" class="com.datacare.common.logback.aop.SystemLogAspect" />   --> 
    <!-- Spring 统一日志处理 LogInterceptor拦截器 配置 -->
	<!-- <bean id="logLnterceptor" class="com.datacare.common.logback.interceptor.LogInterceptor" /> -->
	<!-- Bean自动代理处理器 配置 -->
	<!-- <bean
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				配置需要进行日志记录的Service和Dao
				<value>commonDao</value>
				配置所有Service结尾命名的Bean，即所有Service层的类都要经过exceptionHandler异常处理类
				<value>*Service*</value>  Service层的Bean ID 命名要以Service结尾
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>logLnterceptor</value>
			</list>
		</property>
	</bean> -->
 
</beans>