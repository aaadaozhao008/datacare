<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- 加载配置文件 -->
	<!-- <context:property-placeholder location = "classpath:config.properties"  ignore-unresolvable="true" />
	
	
	数据库连接池
	<bean id = "dataSource" class = "com.alibaba.druid.pool.DruidDataSource" destroy-method = "close">
		<property name = "driverClassName" value = "${jdbc.driver}" />
		<property name = "url" value = "${jdbc.url}"/>
		<property name = "username" value = "${jdbc.username}" />
		<property name = "password" value = "${jdbc.password}" />
		<property name = "maxActive" value = "${jdbc.maxActive}" />
		<property name = "minIdle" value = "${jdbc.minIdle}" />
		<property name="filters" value="stat,wall"></property>
	</bean>
	 -->
	<!-- 让spring管理sqlsessionfactory 使用mybatis和spring整合包中的 -->
<!-- 	<bean id = "sqlSessionFactory" class = "org.mybatis.spring.SqlSessionFactoryBean">
		<property name = "dataSource" ref = "dataSource" />
		引入MyBatis配置文件
		<property name="configLocation"  value="classpath:mybatis-config.xml"/>
		配置映射文件加载
		<property name = "mapperLocations">
	     <array>
              <value>classpath:mappers/*.xml</value>
              <value>classpath:mappers/**/*.xml</value>
          </array>
		</property>
	</bean> -->
	
<!-- 	<bean class = "org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name = "basePackage" value = "com.myqq.dao.mappers" />
		<property name = "sqlSessionFactoryBeanName" value = "sqlSessionFactory" />
	</bean>
	
	配置事务管理器
	<bean id = "transactionManager"
	      class = "org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name = "dataSource" ref = "dataSource" />
	</bean>
	
	<tx:annotation-driven proxy-target-class="true"  transaction-manager="transactionManager"/> -->
	
</beans>
